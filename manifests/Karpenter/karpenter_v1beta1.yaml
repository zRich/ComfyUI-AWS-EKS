apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: karpenter-nodepool
spec:
  disruption:
    consolidateAfter: 30s
    consolidationPolicy: WhenEmpty
    expireAfter: 720h # Rotate GPU nodes every 30 days
  template:
    metadata: {}
    spec:
      nodeClassRef:
        name: node-gpu
      requirements:
      - key: karpenter.sh/capacity-type
        operator: In
        values:
        - on-demand
        #- spot
      - key: node.kubernetes.io/instance-type
        operator: In
        values:
        - g5.2xlarge
        #- g4dn.2xlarge
      - key: kubernetes.io/os
        operator: In
        values:
        - linux
      - key: kubernetes.io/arch
        operator: In
        values:
        - amd64
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: node-gpu
spec:
  amiFamily: AL2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      volumeSize: 100Gi
      volumeType: gp3
  role: KarpenterInstanceNodeRole
  securityGroupSelectorTerms:
  - tags:
      Name: eks-cluster-sg-Comfyui-Cluster*
  subnetSelectorTerms:
  - tags:
      Name: Comfyui-Cluster/Comfyui-Cluster-vpc/Private*
  tags:
    Cost-Center: AI-Lab
    Name: ComfyUI-EKS-GPU-Node
  userData: |
    #!/bin/bash
    mkfs -t xfs /dev/nvme1n1
    mkdir -p /comfyui-models
    mount /dev/nvme1n1 /comfyui-models
    account=$(aws sts get-caller-identity --query 'Account' --output text)
    region=$(ec2-metadata --availability-zone | sed 's/.$//'|awk '{print $NF}')
    aws s3 sync s3://comfyui-models-${account}-${region} /comfyui-models
